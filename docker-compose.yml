version: '3'
services:
  catalog-service:
    container_name: catalog-service-container
    build: ./catalog-service
    entrypoint: ./.docker/docker-entrypoint.sh
    ports:
      - 3005:3333
    volumes:
      - ./catalog-service:/home/node/app
    networks:
      - main-network
    links:
      - db
      - rabbitmq
    depends_on:
      - db
      - rabbitmq
  movie-service:
    container_name: movie-service-container
    build: ./movie-service
    entrypoint: ./.docker/docker-entrypoint.sh
    ports:
      - 3004:3333
    volumes:
      - ./movie-service:/home/node/app
    networks:
      - main-network
    links:
      - db
      - rabbitmq
    depends_on:
      - db
      - rabbitmq
  store-service:
    container_name: store-service-container
    build: ./store-service
    entrypoint: ./.docker/docker-entrypoint.sh
    ports:
      - 3003:3333
    volumes:
      - ./store-service:/home/node/app
    networks:
      - main-network
    links:
      - db
      - rabbitmq
    depends_on:
      - db
      - rabbitmq
  db:
    image: mongo
    container_name: db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=leleco
      - MONGO_INITDB_ROOT_PASSWORD=leleco
    volumes:
      - mongo-service-volume:/data/db
    ports:
      - 27017:27017
    networks:
      - main-network
    restart: unless-stopped
  rabbitmq:
    image: 'rabbitmq:3.8-management-alpine'
    hostname: rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - './rabbitmq_data:/var/lib/rabbitmq/mnesia'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - main-network

volumes:
  #   catalog-service-volume:
  #     external: false
  #   movie-service-volume:
  #     external: false
  #   store-service-volume:
  #     external: false
  mongo-service-volume:
    external: false

networks:
  main-network:
    driver: bridge
